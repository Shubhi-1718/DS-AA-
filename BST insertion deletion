#include <stdio.h>
typedef struct nodeType
{
    struct nodeType *left;
    int val;
    struct nodeType *right;
}node;
void createTree(node **root)
{
    *root=NULL;
}
int inordertraversal(node *root)
{
    inordertraversal(root->left);
    printf("%d ",root->val);
    inordertraversal(root->right);
}
int preordertraversal(node *root)
{
    printf("%d ",root->val);
    preordertraversal(root->left);
    preordertraversal(root->right);
}
int postordertraversal(node *root)
{
    postordertraversal(root->left);
    postordertraversal(root->right);
    printf("%d ",root->val);
}
void insertElement(node **root,int element)
{
    if(*root==NULL)
    {
        *root=(node*)malloc(sizeof(node));
        (*root)->val=element;
        (*root)->right=(*root)->left=NULL;
    }
    else if (element<(*root)->val)
    insertElement(&((*root)->left),element);
    else
    insertElement(&((*root)->right),element);
}
void deleteElement(node **root,int element)
{
    
    node *temp;
    if(*root==NULL)
    {
        return;
    }
    else if(element<(*root)->val)
    deleteElement((*tree)->left,element);
    else if(element>(*root)->val)
    deleteElement((*tree)->right,element);
    else if((*tree)->left && (*tree)->right)
    temp = find
}
int main() 
{
    // Write C code here
    printf("Hello world");

    return 0;
}
